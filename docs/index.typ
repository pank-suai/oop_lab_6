#import "lib/gost.typ": init
#import "lib/titlepage.typ": titlepage

#show: init


= Цель работы

Изучить принципы построения консольных приложений, применив на практике знания базовых синтаксических конструкций языка C++ и объектно-ориентированного программирования. Закрепить знания по теме: Обработка исключительных ситуаций.

= Задание

Вариант 5: В одномерном массиве, состоящем из n целочисленных элементов, вычислить номер максимального элемента массива и произведение элементов массива, расположенных между первым и вторым нулевыми элементами. Преобразовать массив таким образом, чтобы в первой его половине располагались элементы, стоявшие в нечетных позициях, а во второй половине — элементы, стоявшие в четных позициях. Размерность массива определяется как сумма двух последних цифр шифра студента (2024/1624), что равно 2+4=6, но поскольку сумма меньше 12, размерность массива равна 12.

= Код программы

== Исключения

#raw(read("../src/Exceptions.hpp"), lang: "cpp", block: true)

== Класс Array

#raw(read("../src/Array.hpp"), lang: "cpp", block: true)

#raw(read("../src/Array.cpp"), lang: "cpp", block: true)

== Основная программа

#raw(read("../src/main.cpp"), lang: "cpp", block: true)

= Скриншоты выполнения программы

#figure(
  image("images/001_program_output.png"),
  caption: "Вывод программы, демонстрирующий нормальную работу программы, вычисление индекса максимального элемента, произведения между нулями, преобразование массива, а также обработку исключений для неверного размера и отсутствия нулей"
)

= Вывод

В результате выполнения лабораторной работы был реализован класс Array для работы с одномерным целочисленным массивом, выполняющий задания варианта 5: вычисление индекса максимального элемента, произведения между нулями и преобразование массива. Программа успешно компилируется и выполняется, демонстрируя корректную работу всех функций и обработку исключительных ситуаций.



